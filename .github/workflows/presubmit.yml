name: Regression tests


on:
  pull_request:
    types: [opened, edited, synchronize]
    paths-ignore:
    - '**.md'
  push:
    branches:
    - 'main'
    paths-ignore:
    - '**.md'

jobs:
  presubmit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19
        check-latest: true
    - id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"
    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-build-1-${{ hashFiles('**/go.sum') }}
    - name: Go Build Mod
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-1-${{ hashFiles('**/go.sum') }}
    - uses: arduino/setup-protoc@v1
      with:
        version: '3.x'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: 13
    - name: Set up libbpf
      env:
        SUDO: sudo
      run: ./test/image/install_libbpf.sh
    - name: Install kpt
      run: ./test/image/install_kpt.sh
      env:
        SUDO: sudo
    - uses: giantswarm/install-binary-action@v1
      name: Install ko
      with:
        binary: "ko"
        version: "0.12.0"
        download_url: "https://github.com/google/ko/releases/download/v0.12.0/ko_0.12.0_Linux_x86_64.tar.gz"
        tarball_binary_path: "ko"
    - uses: engineerd/setup-kind@v0.5.0
      with:
        version: v0.13.0
        skipClusterCreation: "true"
    - name: test
      if: github.event_name == 'push'
      run: |
        sudo env "PATH=$PATH" make test
    - name: test
      if: github.event_name != 'push'
      env:
        TEST_FLAGS: -short
      run: |
        sudo env "PATH=$PATH" "TEST_FLAGS=$TEST_FLAGS" make test
