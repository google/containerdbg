// Copyright 2022 Google LLC All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: event.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DnsQueryError_ErrorCode int32

const (
	DnsQueryError_OK      DnsQueryError_ErrorCode = 0
	DnsQueryError_UNKNOWN DnsQueryError_ErrorCode = 1
)

// Enum value maps for DnsQueryError_ErrorCode.
var (
	DnsQueryError_ErrorCode_name = map[int32]string{
		0: "OK",
		1: "UNKNOWN",
	}
	DnsQueryError_ErrorCode_value = map[string]int32{
		"OK":      0,
		"UNKNOWN": 1,
	}
)

func (x DnsQueryError_ErrorCode) Enum() *DnsQueryError_ErrorCode {
	p := new(DnsQueryError_ErrorCode)
	*p = x
	return p
}

func (x DnsQueryError_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DnsQueryError_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_event_proto_enumTypes[0].Descriptor()
}

func (DnsQueryError_ErrorCode) Type() protoreflect.EnumType {
	return &file_event_proto_enumTypes[0]
}

func (x DnsQueryError_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DnsQueryError_ErrorCode.Descriptor instead.
func (DnsQueryError_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0, 0}
}

type Event_NetworkEvent_NetworkEventType int32

const (
	Event_NetworkEvent_UNUSED              Event_NetworkEvent_NetworkEventType = 0 // As default protobuf text doesn't print 0s - should fix this
	Event_NetworkEvent_LISTEN              Event_NetworkEvent_NetworkEventType = 1
	Event_NetworkEvent_FAILED_CONNECTION   Event_NetworkEvent_NetworkEventType = 2
	Event_NetworkEvent_INITIATE_CONNECTION Event_NetworkEvent_NetworkEventType = 3
)

// Enum value maps for Event_NetworkEvent_NetworkEventType.
var (
	Event_NetworkEvent_NetworkEventType_name = map[int32]string{
		0: "UNUSED",
		1: "LISTEN",
		2: "FAILED_CONNECTION",
		3: "INITIATE_CONNECTION",
	}
	Event_NetworkEvent_NetworkEventType_value = map[string]int32{
		"UNUSED":              0,
		"LISTEN":              1,
		"FAILED_CONNECTION":   2,
		"INITIATE_CONNECTION": 3,
	}
)

func (x Event_NetworkEvent_NetworkEventType) Enum() *Event_NetworkEvent_NetworkEventType {
	p := new(Event_NetworkEvent_NetworkEventType)
	*p = x
	return p
}

func (x Event_NetworkEvent_NetworkEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_NetworkEvent_NetworkEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_event_proto_enumTypes[1].Descriptor()
}

func (Event_NetworkEvent_NetworkEventType) Type() protoreflect.EnumType {
	return &file_event_proto_enumTypes[1]
}

func (x Event_NetworkEvent_NetworkEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_NetworkEvent_NetworkEventType.Descriptor instead.
func (Event_NetworkEvent_NetworkEventType) EnumDescriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2, 1, 0}
}

type DnsQueryError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code DnsQueryError_ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=DnsQueryError_ErrorCode" json:"code,omitempty"`
}

func (x *DnsQueryError) Reset() {
	*x = DnsQueryError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DnsQueryError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsQueryError) ProtoMessage() {}

func (x *DnsQueryError) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsQueryError.ProtoReflect.Descriptor instead.
func (*DnsQueryError) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *DnsQueryError) GetCode() DnsQueryError_ErrorCode {
	if x != nil {
		return x.Code
	}
	return DnsQueryError_OK
}

type SourceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SourceId) Reset() {
	*x = SourceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceId) ProtoMessage() {}

func (x *SourceId) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceId.ProtoReflect.Descriptor instead.
func (*SourceId) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *SourceId) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SourceId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// TODO: Add TID/PID
	Source *SourceId `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// Types that are assignable to EventType:
	//
	//	*Event_Syscall
	//	*Event_Network
	//	*Event_DnsQuery
	//	*Event_DnsSearch
	EventType isEvent_EventType `protobuf_oneof:"event_type"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetSource() *SourceId {
	if x != nil {
		return x.Source
	}
	return nil
}

func (m *Event) GetEventType() isEvent_EventType {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (x *Event) GetSyscall() *Event_SyscallEvent {
	if x, ok := x.GetEventType().(*Event_Syscall); ok {
		return x.Syscall
	}
	return nil
}

func (x *Event) GetNetwork() *Event_NetworkEvent {
	if x, ok := x.GetEventType().(*Event_Network); ok {
		return x.Network
	}
	return nil
}

func (x *Event) GetDnsQuery() *Event_DnsQueryEvent {
	if x, ok := x.GetEventType().(*Event_DnsQuery); ok {
		return x.DnsQuery
	}
	return nil
}

func (x *Event) GetDnsSearch() *Event_DnsSearchParametersProbe {
	if x, ok := x.GetEventType().(*Event_DnsSearch); ok {
		return x.DnsSearch
	}
	return nil
}

type isEvent_EventType interface {
	isEvent_EventType()
}

type Event_Syscall struct {
	Syscall *Event_SyscallEvent `protobuf:"bytes,3,opt,name=syscall,proto3,oneof"`
}

type Event_Network struct {
	Network *Event_NetworkEvent `protobuf:"bytes,4,opt,name=network,proto3,oneof"`
}

type Event_DnsQuery struct {
	DnsQuery *Event_DnsQueryEvent `protobuf:"bytes,5,opt,name=dns_query,json=dnsQuery,proto3,oneof"`
}

type Event_DnsSearch struct {
	DnsSearch *Event_DnsSearchParametersProbe `protobuf:"bytes,6,opt,name=dns_search,json=dnsSearch,proto3,oneof"`
}

func (*Event_Syscall) isEvent_EventType() {}

func (*Event_Network) isEvent_EventType() {}

func (*Event_DnsQuery) isEvent_EventType() {}

func (*Event_DnsSearch) isEvent_EventType() {}

type Event_SyscallEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comm    string `protobuf:"bytes,1,opt,name=comm,proto3" json:"comm,omitempty"`
	RetCode int64  `protobuf:"varint,2,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	// Types that are assignable to Syscall:
	//
	//	*Event_SyscallEvent_Open
	//	*Event_SyscallEvent_Rename
	//	*Event_SyscallEvent_Link
	Syscall isEvent_SyscallEvent_Syscall `protobuf_oneof:"syscall"`
}

func (x *Event_SyscallEvent) Reset() {
	*x = Event_SyscallEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_SyscallEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_SyscallEvent) ProtoMessage() {}

func (x *Event_SyscallEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_SyscallEvent.ProtoReflect.Descriptor instead.
func (*Event_SyscallEvent) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Event_SyscallEvent) GetComm() string {
	if x != nil {
		return x.Comm
	}
	return ""
}

func (x *Event_SyscallEvent) GetRetCode() int64 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (m *Event_SyscallEvent) GetSyscall() isEvent_SyscallEvent_Syscall {
	if m != nil {
		return m.Syscall
	}
	return nil
}

func (x *Event_SyscallEvent) GetOpen() *Event_SyscallEvent_OpenSyscall {
	if x, ok := x.GetSyscall().(*Event_SyscallEvent_Open); ok {
		return x.Open
	}
	return nil
}

func (x *Event_SyscallEvent) GetRename() *Event_SyscallEvent_RenameSyscall {
	if x, ok := x.GetSyscall().(*Event_SyscallEvent_Rename); ok {
		return x.Rename
	}
	return nil
}

func (x *Event_SyscallEvent) GetLink() *Event_SyscallEvent_LinkSyscall {
	if x, ok := x.GetSyscall().(*Event_SyscallEvent_Link); ok {
		return x.Link
	}
	return nil
}

type isEvent_SyscallEvent_Syscall interface {
	isEvent_SyscallEvent_Syscall()
}

type Event_SyscallEvent_Open struct {
	Open *Event_SyscallEvent_OpenSyscall `protobuf:"bytes,4,opt,name=open,proto3,oneof"`
}

type Event_SyscallEvent_Rename struct {
	Rename *Event_SyscallEvent_RenameSyscall `protobuf:"bytes,5,opt,name=rename,proto3,oneof"`
}

type Event_SyscallEvent_Link struct {
	Link *Event_SyscallEvent_LinkSyscall `protobuf:"bytes,6,opt,name=link,proto3,oneof"`
}

func (*Event_SyscallEvent_Open) isEvent_SyscallEvent_Syscall() {}

func (*Event_SyscallEvent_Rename) isEvent_SyscallEvent_Syscall() {}

func (*Event_SyscallEvent_Link) isEvent_SyscallEvent_Syscall() {}

type Event_NetworkEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comm      string                              `protobuf:"bytes,1,opt,name=comm,proto3" json:"comm,omitempty"`
	EventType Event_NetworkEvent_NetworkEventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=Event_NetworkEvent_NetworkEventType" json:"event_type,omitempty"`
	AddrFam   int32                               `protobuf:"varint,3,opt,name=addr_fam,json=addrFam,proto3" json:"addr_fam,omitempty"`
	SrcAddr   string                              `protobuf:"bytes,4,opt,name=src_addr,json=srcAddr,proto3" json:"src_addr,omitempty"`
	DstAddr   string                              `protobuf:"bytes,5,opt,name=dst_addr,json=dstAddr,proto3" json:"dst_addr,omitempty"`
	SrcPort   int32                               `protobuf:"varint,6,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort   int32                               `protobuf:"varint,7,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
}

func (x *Event_NetworkEvent) Reset() {
	*x = Event_NetworkEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_NetworkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_NetworkEvent) ProtoMessage() {}

func (x *Event_NetworkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_NetworkEvent.ProtoReflect.Descriptor instead.
func (*Event_NetworkEvent) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Event_NetworkEvent) GetComm() string {
	if x != nil {
		return x.Comm
	}
	return ""
}

func (x *Event_NetworkEvent) GetEventType() Event_NetworkEvent_NetworkEventType {
	if x != nil {
		return x.EventType
	}
	return Event_NetworkEvent_UNUSED
}

func (x *Event_NetworkEvent) GetAddrFam() int32 {
	if x != nil {
		return x.AddrFam
	}
	return 0
}

func (x *Event_NetworkEvent) GetSrcAddr() string {
	if x != nil {
		return x.SrcAddr
	}
	return ""
}

func (x *Event_NetworkEvent) GetDstAddr() string {
	if x != nil {
		return x.DstAddr
	}
	return ""
}

func (x *Event_NetworkEvent) GetSrcPort() int32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *Event_NetworkEvent) GetDstPort() int32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

type Event_DnsQueryEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Types that are assignable to Answer:
	//
	//	*Event_DnsQueryEvent_Ip
	//	*Event_DnsQueryEvent_Error
	Answer isEvent_DnsQueryEvent_Answer `protobuf_oneof:"answer"`
}

func (x *Event_DnsQueryEvent) Reset() {
	*x = Event_DnsQueryEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_DnsQueryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_DnsQueryEvent) ProtoMessage() {}

func (x *Event_DnsQueryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_DnsQueryEvent.ProtoReflect.Descriptor instead.
func (*Event_DnsQueryEvent) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Event_DnsQueryEvent) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (m *Event_DnsQueryEvent) GetAnswer() isEvent_DnsQueryEvent_Answer {
	if m != nil {
		return m.Answer
	}
	return nil
}

func (x *Event_DnsQueryEvent) GetIp() string {
	if x, ok := x.GetAnswer().(*Event_DnsQueryEvent_Ip); ok {
		return x.Ip
	}
	return ""
}

func (x *Event_DnsQueryEvent) GetError() *DnsQueryError {
	if x, ok := x.GetAnswer().(*Event_DnsQueryEvent_Error); ok {
		return x.Error
	}
	return nil
}

type isEvent_DnsQueryEvent_Answer interface {
	isEvent_DnsQueryEvent_Answer()
}

type Event_DnsQueryEvent_Ip struct {
	Ip string `protobuf:"bytes,2,opt,name=ip,proto3,oneof"`
}

type Event_DnsQueryEvent_Error struct {
	Error *DnsQueryError `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*Event_DnsQueryEvent_Ip) isEvent_DnsQueryEvent_Answer() {}

func (*Event_DnsQueryEvent_Error) isEvent_DnsQueryEvent_Answer() {}

type Event_DnsSearchParametersProbe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search []string `protobuf:"bytes,1,rep,name=search,proto3" json:"search,omitempty"`
}

func (x *Event_DnsSearchParametersProbe) Reset() {
	*x = Event_DnsSearchParametersProbe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_DnsSearchParametersProbe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_DnsSearchParametersProbe) ProtoMessage() {}

func (x *Event_DnsSearchParametersProbe) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_DnsSearchParametersProbe.ProtoReflect.Descriptor instead.
func (*Event_DnsSearchParametersProbe) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Event_DnsSearchParametersProbe) GetSearch() []string {
	if x != nil {
		return x.Search
	}
	return nil
}

type Event_SyscallEvent_OpenSyscall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Event_SyscallEvent_OpenSyscall) Reset() {
	*x = Event_SyscallEvent_OpenSyscall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_SyscallEvent_OpenSyscall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_SyscallEvent_OpenSyscall) ProtoMessage() {}

func (x *Event_SyscallEvent_OpenSyscall) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_SyscallEvent_OpenSyscall.ProtoReflect.Descriptor instead.
func (*Event_SyscallEvent_OpenSyscall) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *Event_SyscallEvent_OpenSyscall) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Event_SyscallEvent_RenameSyscall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oldname string `protobuf:"bytes,1,opt,name=oldname,proto3" json:"oldname,omitempty"`
	Newname string `protobuf:"bytes,2,opt,name=newname,proto3" json:"newname,omitempty"`
}

func (x *Event_SyscallEvent_RenameSyscall) Reset() {
	*x = Event_SyscallEvent_RenameSyscall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_SyscallEvent_RenameSyscall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_SyscallEvent_RenameSyscall) ProtoMessage() {}

func (x *Event_SyscallEvent_RenameSyscall) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_SyscallEvent_RenameSyscall.ProtoReflect.Descriptor instead.
func (*Event_SyscallEvent_RenameSyscall) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2, 0, 1}
}

func (x *Event_SyscallEvent_RenameSyscall) GetOldname() string {
	if x != nil {
		return x.Oldname
	}
	return ""
}

func (x *Event_SyscallEvent_RenameSyscall) GetNewname() string {
	if x != nil {
		return x.Newname
	}
	return ""
}

type Event_SyscallEvent_LinkSyscall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oldname string `protobuf:"bytes,1,opt,name=oldname,proto3" json:"oldname,omitempty"`
	Newname string `protobuf:"bytes,2,opt,name=newname,proto3" json:"newname,omitempty"`
}

func (x *Event_SyscallEvent_LinkSyscall) Reset() {
	*x = Event_SyscallEvent_LinkSyscall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_SyscallEvent_LinkSyscall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_SyscallEvent_LinkSyscall) ProtoMessage() {}

func (x *Event_SyscallEvent_LinkSyscall) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_SyscallEvent_LinkSyscall.ProtoReflect.Descriptor instead.
func (*Event_SyscallEvent_LinkSyscall) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2, 0, 2}
}

func (x *Event_SyscallEvent_LinkSyscall) GetOldname() string {
	if x != nil {
		return x.Oldname
	}
	return ""
}

func (x *Event_SyscallEvent_LinkSyscall) GetNewname() string {
	if x != nil {
		return x.Newname
	}
	return ""
}

var File_event_proto protoreflect.FileDescriptor

var file_event_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f,
	0x0a, 0x0d, 0x44, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x44, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a,
	0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x22,
	0x2e, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xd8, 0x09, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x63, 0x61, 0x6c,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x2f, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x33, 0x0a, 0x09, 0x64, 0x6e, 0x73, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x08, 0x64, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x40, 0x0a,
	0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x6e, 0x73, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x50, 0x72, 0x6f,
	0x62, 0x65, 0x48, 0x00, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a,
	0x9e, 0x03, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6d, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x6d, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x35, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x00,
	0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c,
	0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x79, 0x73, 0x63, 0x61,
	0x6c, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x21, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x43, 0x0a,
	0x0d, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x6e, 0x61,
	0x6d, 0x65, 0x1a, 0x41, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x77, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c,
	0x1a, 0xca, 0x02, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6d, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x6d, 0x6d, 0x12, 0x43, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64,
	0x64, 0x72, 0x5f, 0x66, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x46, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x22, 0x5a, 0x0a, 0x10, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x55, 0x53, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x1a, 0x69, 0x0a,
	0x0d, 0x44, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08,
	0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x1a, 0x32, 0x0a, 0x18, 0x44, 0x6e, 0x73, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x0c, 0x0a, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x76, 0x65,
	0x6c, 0x6f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x61, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x64, 0x62, 0x67, 0x2e,
	0x67, 0x69, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData = file_event_proto_rawDesc
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_proto_rawDescData)
	})
	return file_event_proto_rawDescData
}

var file_event_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_event_proto_goTypes = []interface{}{
	(DnsQueryError_ErrorCode)(0),             // 0: DnsQueryError.ErrorCode
	(Event_NetworkEvent_NetworkEventType)(0), // 1: Event.NetworkEvent.NetworkEventType
	(*DnsQueryError)(nil),                    // 2: DnsQueryError
	(*SourceId)(nil),                         // 3: SourceId
	(*Event)(nil),                            // 4: Event
	(*Event_SyscallEvent)(nil),               // 5: Event.SyscallEvent
	(*Event_NetworkEvent)(nil),               // 6: Event.NetworkEvent
	(*Event_DnsQueryEvent)(nil),              // 7: Event.DnsQueryEvent
	(*Event_DnsSearchParametersProbe)(nil),   // 8: Event.DnsSearchParametersProbe
	(*Event_SyscallEvent_OpenSyscall)(nil),   // 9: Event.SyscallEvent.OpenSyscall
	(*Event_SyscallEvent_RenameSyscall)(nil), // 10: Event.SyscallEvent.RenameSyscall
	(*Event_SyscallEvent_LinkSyscall)(nil),   // 11: Event.SyscallEvent.LinkSyscall
	(*timestamp.Timestamp)(nil),              // 12: google.protobuf.Timestamp
}
var file_event_proto_depIdxs = []int32{
	0,  // 0: DnsQueryError.code:type_name -> DnsQueryError.ErrorCode
	12, // 1: Event.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 2: Event.source:type_name -> SourceId
	5,  // 3: Event.syscall:type_name -> Event.SyscallEvent
	6,  // 4: Event.network:type_name -> Event.NetworkEvent
	7,  // 5: Event.dns_query:type_name -> Event.DnsQueryEvent
	8,  // 6: Event.dns_search:type_name -> Event.DnsSearchParametersProbe
	9,  // 7: Event.SyscallEvent.open:type_name -> Event.SyscallEvent.OpenSyscall
	10, // 8: Event.SyscallEvent.rename:type_name -> Event.SyscallEvent.RenameSyscall
	11, // 9: Event.SyscallEvent.link:type_name -> Event.SyscallEvent.LinkSyscall
	1,  // 10: Event.NetworkEvent.event_type:type_name -> Event.NetworkEvent.NetworkEventType
	2,  // 11: Event.DnsQueryEvent.error:type_name -> DnsQueryError
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DnsQueryError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_SyscallEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_NetworkEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_DnsQueryEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_DnsSearchParametersProbe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_SyscallEvent_OpenSyscall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_SyscallEvent_RenameSyscall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_SyscallEvent_LinkSyscall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_event_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Event_Syscall)(nil),
		(*Event_Network)(nil),
		(*Event_DnsQuery)(nil),
		(*Event_DnsSearch)(nil),
	}
	file_event_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Event_SyscallEvent_Open)(nil),
		(*Event_SyscallEvent_Rename)(nil),
		(*Event_SyscallEvent_Link)(nil),
	}
	file_event_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Event_DnsQueryEvent_Ip)(nil),
		(*Event_DnsQueryEvent_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		EnumInfos:         file_event_proto_enumTypes,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_rawDesc = nil
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
